version: 0.2

env:
  variables:
    TF_VERSION:                                "0.11.7"
    TF_VAR_stage:                              "stg"
    TF_VAR_tfstate_setup_key:                  "setup.terraform.tfstate"
    TF_VAR_tfstate_service_base_pre_key:       "service.base.pre.stg.terraform.tfstate"
    TF_VAR_tfstate_service_api_key:            "service.api.stg.terraform.tfstate"
    TF_VAR_tfstate_service_base_after_api_key: "service.base.after_api.stg.terraform.tfstate"
    TF_VAR_tfstate_service_web_key:            "service.web.stg.terraform.tfstate"

phases:
  install:
    commands:
      - ./bin/install_build_commands.sh "${TF_VERSION}"

  pre_build:
    commands:
      - . ./bin/export_aws_settings.sh

  build:
    commands:
      # base
      - cd environments/service/base/pre/
      - terraform init -backend-config="bucket=${TF_VAR_s3_bucket_terraform_state_id}" -backend-config="key=${TF_VAR_tfstate_service_base_pre_key}"
      - terraform plan
      - terraform apply -auto-approve
      - cloudformation_api_stack=`terraform output cloudformation_api_stack`
      - firehose_delivery_stream_arn=`terraform output firehose_delivery_stream_arn`
      - iam_role_api_log_cloudwatchlogs_to_s3_policy_arn=`terraform output iam_role_api_log_cloudwatchlogs_to_s3_policy_arn`
      - cd -
      # api
      - cd environments/service/api/staging/
      - terraform init -backend-config="bucket=${TF_VAR_s3_bucket_terraform_state_id}" -backend-config="key=${TF_VAR_tfstate_service_api_key}"
      - terraform plan
      - terraform apply -auto-approve
      - codebuild_name=`terraform output codebuild_api_name`
      - cd -
      - ./bin/exec_codebuild.sh "$codebuild_name" master
      - export TF_VAR_apigw_api_id=$(aws cloudformation describe-stack-resource --stack-name "${cloudformation_api_stack}" --logical-resource-id ApiGatewayRestApi | jq -r '.StackResourceDetail.PhysicalResourceId')
      - ./bin/mapping_logs_firehose.sh "$cloudformation_api_stack" "$firehose_delivery_stream_arn" "$iam_role_api_log_cloudwatchlogs_to_s3_policy_arn"
      # base
      - cd environments/service/base/after_api
      - terraform init -backend-config="bucket=${TF_VAR_s3_bucket_terraform_state_id}" -backend-config="key=${TF_VAR_tfstate_service_base_after_api_key}"
      - terraform plan
      - terraform apply -auto-approve
      - cd -
      # web
      - cd environments/service/web/staging/
      - terraform init -backend-config="bucket=${TF_VAR_s3_bucket_terraform_state_id}" -backend-config="key=${TF_VAR_tfstate_service_web_key}"
      - terraform plan
      - terraform apply -auto-approve
      - codebuild_name=`terraform output codebuild_web_name`
      - cd -
      - ./bin/exec_codebuild.sh "$codebuild_name" master
      - zip -r infrastructure.zip *

  post_build:
    commands:
      - echo "terraform completed on `date`"

artifacts:
  files:
    - infrastructure.zip
